{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msanj\\\\Desktop\\\\web5\\\\Expense-Tracker\\\\Frontend\\\\Frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport React, { useEffect, useState } from 'react';\nimport BudgetComparisonChart from '../components/BudgetComparisonChart';\nimport BudgetForm from '../components/BudgetForm';\nimport BudgetProgress from '../components/BudgetProgress';\nimport ChartComponent from '../components/ChartComponent';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [categoryData, setCategoryData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [monthlyData, setMonthlyData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [budgets, setBudgets] = useState({});\n  const [expensesByCategory, setExpensesByCategory] = useState({});\n  const [recentExpenses, setRecentExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem('token');\n      const userId = localStorage.getItem('userId');\n      if (!token || !userId) {\n        setErrorMessage('User not authenticated.');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5000/api/expenses/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data && response.data.length > 0) {\n          const categories = {};\n          const monthlyExpenses = {};\n          const categoryExpenses = {};\n          let total = 0;\n          response.data.forEach(expense => {\n            const category = expense.category || 'Uncategorized';\n            const month = new Date(expense.date).getMonth() + 1;\n            categories[category] = (categories[category] || 0) + expense.amount;\n            categoryExpenses[category] = (categoryExpenses[category] || 0) + expense.amount;\n            monthlyExpenses[month] = (monthlyExpenses[month] || 0) + expense.amount;\n            total += expense.amount;\n          });\n          setExpensesByCategory(categoryExpenses);\n          setTotalExpenses(total);\n          setCategoryData({\n            labels: Object.keys(categories),\n            datasets: [{\n              label: 'Expenses by Category',\n              data: Object.values(categories),\n              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n            }]\n          });\n          setMonthlyData({\n            labels: Object.keys(monthlyExpenses).map(m => `Month ${m}`),\n            datasets: [{\n              label: 'Monthly Expenses',\n              data: Object.values(monthlyExpenses),\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,192,192,1)',\n              borderWidth: 1\n            }]\n          });\n          const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n          setRecentExpenses(sortedExpenses.slice(0, 5));\n        } else {\n          setCategoryData({\n            labels: [],\n            datasets: []\n          });\n          setMonthlyData({\n            labels: [],\n            datasets: []\n          });\n          setRecentExpenses([]);\n          setTotalExpenses(0);\n        }\n        const budgetResponse = await axios.get(`http://localhost:5000/api/budgets/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (budgetResponse.data && budgetResponse.data.budgets) {\n          setBudgets(budgetResponse.data.budgets);\n        } else {\n          setBudgets({});\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        //  setErrorMessage('Failed to fetch data. Please try again later.');\n      }\n    };\n    fetchData();\n  }, []);\n  const exportDataToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Expense Report', 14, 16);\n    const categoryTableColumns = ['Category', 'Amount'];\n    const categoryTableRows = Object.entries(expensesByCategory).map(([category, amount]) => [category, `₹${amount.toFixed(2)}`]);\n    doc.autoTable({\n      head: [categoryTableColumns],\n      body: categoryTableRows,\n      startY: 20,\n      theme: 'striped',\n      headStyles: {\n        fillColor: [54, 162, 235]\n      }\n    });\n    const monthlyTableColumns = ['Month', 'Amount'];\n    const monthlyTableRows = monthlyData.labels.map((month, index) => [month, `₹${monthlyData.datasets[0].data[index].toFixed(2)}`]);\n    doc.autoTable({\n      head: [monthlyTableColumns],\n      body: monthlyTableRows,\n      startY: doc.lastAutoTable.finalY + 10,\n      theme: 'striped',\n      headStyles: {\n        fillColor: [255, 99, 132]\n      }\n    });\n    doc.save('expense-report.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(BudgetForm, {\n        userId: localStorage.getItem('userId'),\n        onBudgetUpdate: setBudgets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(BudgetProgress, {\n        budgets: budgets,\n        expenses: expensesByCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u20B9\", totalExpenses.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), recentExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: recentExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: expense.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\xA3\", expense.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this)]\n          }, expense.id || expense.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recent expenses available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expenses by Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChartComponent, {\n        data: categoryData,\n        type: \"pie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(BudgetComparisonChart, {\n        budgets: budgets,\n        expensesByCategory: expensesByCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(ChartComponent, {\n        data: monthlyData,\n        type: \"bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportDataToPDF,\n        className: \"btn btn-primary\",\n        children: \"Export Report as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"W19pHBvptvwFfX3iL5YOQd2VvjM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","jsPDF","React","useEffect","useState","BudgetComparisonChart","BudgetForm","BudgetProgress","ChartComponent","jsxDEV","_jsxDEV","Dashboard","_s","categoryData","setCategoryData","labels","datasets","monthlyData","setMonthlyData","errorMessage","setErrorMessage","budgets","setBudgets","expensesByCategory","setExpensesByCategory","recentExpenses","setRecentExpenses","totalExpenses","setTotalExpenses","fetchData","token","localStorage","getItem","userId","response","get","headers","Authorization","data","length","categories","monthlyExpenses","categoryExpenses","total","forEach","expense","category","month","Date","date","getMonth","amount","Object","keys","label","values","backgroundColor","map","m","borderColor","borderWidth","sortedExpenses","sort","a","b","slice","budgetResponse","error","console","exportDataToPDF","doc","text","categoryTableColumns","categoryTableRows","entries","toFixed","autoTable","head","body","startY","theme","headStyles","fillColor","monthlyTableColumns","monthlyTableRows","index","lastAutoTable","finalY","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onBudgetUpdate","expenses","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/msanj/Desktop/web5/Expense-Tracker/Frontend/Frontend/src/pages/Dashboard.js"],"sourcesContent":["import axios from 'axios';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport React, { useEffect, useState } from 'react';\nimport BudgetComparisonChart from '../components/BudgetComparisonChart';\nimport BudgetForm from '../components/BudgetForm';\nimport BudgetProgress from '../components/BudgetProgress';\nimport ChartComponent from '../components/ChartComponent';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    const [categoryData, setCategoryData] = useState({ labels: [], datasets: [] });\n    const [monthlyData, setMonthlyData] = useState({ labels: [], datasets: [] });\n    const [errorMessage, setErrorMessage] = useState('');\n    const [budgets, setBudgets] = useState({});\n    const [expensesByCategory, setExpensesByCategory] = useState({});\n    const [recentExpenses, setRecentExpenses] = useState([]);\n    const [totalExpenses, setTotalExpenses] = useState(0);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const token = localStorage.getItem('token');\n            const userId = localStorage.getItem('userId');\n\n            if (!token || !userId) {\n                setErrorMessage('User not authenticated.');\n                return;\n            }\n\n            try {\n                const response = await axios.get(`http://localhost:5000/api/expenses/${userId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                if (response.data && response.data.length > 0) {\n                    const categories = {};\n                    const monthlyExpenses = {};\n                    const categoryExpenses = {};\n                    let total = 0;\n\n                    response.data.forEach(expense => {\n                        const category = expense.category || 'Uncategorized';\n                        const month = new Date(expense.date).getMonth() + 1;\n\n                        categories[category] = (categories[category] || 0) + expense.amount;\n                        categoryExpenses[category] = (categoryExpenses[category] || 0) + expense.amount;\n                        monthlyExpenses[month] = (monthlyExpenses[month] || 0) + expense.amount;\n\n                        total += expense.amount;\n                    });\n\n                    setExpensesByCategory(categoryExpenses);\n                    setTotalExpenses(total);\n\n                    setCategoryData({\n                        labels: Object.keys(categories),\n                        datasets: [\n                            {\n                                label: 'Expenses by Category',\n                                data: Object.values(categories),\n                                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n                            },\n                        ],\n                    });\n\n                    setMonthlyData({\n                        labels: Object.keys(monthlyExpenses).map(m => `Month ${m}`),\n                        datasets: [\n                            {\n                                label: 'Monthly Expenses',\n                                data: Object.values(monthlyExpenses),\n                                backgroundColor: 'rgba(75,192,192,0.4)',\n                                borderColor: 'rgba(75,192,192,1)',\n                                borderWidth: 1,\n                            },\n                        ],\n                    });\n\n                    const sortedExpenses = response.data.sort((a, b) => new Date(b.date) - new Date(a.date));\n                    setRecentExpenses(sortedExpenses.slice(0, 5));\n                } else {\n                    setCategoryData({ labels: [], datasets: [] });\n                    setMonthlyData({ labels: [], datasets: [] });\n                    setRecentExpenses([]);\n                    setTotalExpenses(0);\n                }\n\n                const budgetResponse = await axios.get(`http://localhost:5000/api/budgets/${userId}`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                if (budgetResponse.data && budgetResponse.data.budgets) {\n                    setBudgets(budgetResponse.data.budgets);\n                } else {\n                    setBudgets({});\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n               //  setErrorMessage('Failed to fetch data. Please try again later.');\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const exportDataToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Expense Report', 14, 16);\n\n        const categoryTableColumns = ['Category', 'Amount'];\n        const categoryTableRows = Object.entries(expensesByCategory).map(([category, amount]) => [\n            category,\n            `₹${amount.toFixed(2)}`,\n        ]);\n\n        doc.autoTable({\n            head: [categoryTableColumns],\n            body: categoryTableRows,\n            startY: 20,\n            theme: 'striped',\n            headStyles: { fillColor: [54, 162, 235] },\n        });\n\n        const monthlyTableColumns = ['Month', 'Amount'];\n        const monthlyTableRows = monthlyData.labels.map((month, index) => [\n            month,\n            `₹${monthlyData.datasets[0].data[index].toFixed(2)}`,\n        ]);\n\n        doc.autoTable({\n            head: [monthlyTableColumns],\n            body: monthlyTableRows,\n            startY: doc.lastAutoTable.finalY + 10,\n            theme: 'striped',\n            headStyles: { fillColor: [255, 99, 132] },\n        });\n\n        doc.save('expense-report.pdf');\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <h1 className=\"dashboard-title\">Dashboard</h1>\n            {errorMessage && <div className=\"alert alert-danger\">{errorMessage}</div>}\n\n            <div className=\"card\">\n                <BudgetForm userId={localStorage.getItem('userId')} onBudgetUpdate={setBudgets} />\n            </div>\n\n            <div className=\"card\">\n                <BudgetProgress budgets={budgets} expenses={expensesByCategory} />\n            </div>\n\n            <div className=\"card\">\n                <h3>Total Expenses</h3>\n                <p>₹{totalExpenses.toFixed(2)}</p>\n            </div>\n\n            <div className=\"card\">\n                <h3>Recent Expenses</h3>\n                {recentExpenses.length > 0 ? (\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Category</th>\n                                <th>Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {recentExpenses.map(expense => (\n                                <tr key={expense.id || expense.id}>\n                                    <td>{expense.date}</td>\n                                    <td>{expense.category}</td>\n                                    <td>£{expense.amount.toFixed(2)}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                ) : (\n                    <p>No recent expenses available.</p>\n                )}\n            </div>\n            <div className=\"card\">\n                <h3>Expenses by Category</h3>\n            <   ChartComponent data={categoryData} type=\"pie\" />\n            </div>\n\n            <div className=\"card\">\n                <BudgetComparisonChart budgets={budgets} expensesByCategory={expensesByCategory} />\n            </div>\n\n            <div className=\"card\">\n                <ChartComponent data={monthlyData} type=\"bar\" />\n            </div>\n\n            <div className=\"export-button\">\n                <button onClick={exportDataToPDF} className=\"btn btn-primary\">\n                    Export Report as PDF\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}